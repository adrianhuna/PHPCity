{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bundle.min.js","src/scripts/blocks.ts","src/scripts/helpers.ts","src/scripts/histogram.ts","src/scripts/main.ts","src/scripts/preprocessor.ts","src/scripts/scene_manager.ts","src/scripts/stats.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","helpers_1","scene_manager_1","Block","name","parent","w","h","depth","getColor","color","THREE","Color","parseInt","colorLuminance","getHex","substring","toUpperCase","setColor","getX","fit","x","getY","y","getTrackerText","Building","_super","data","heightLevels","widthLevels","heightAttr","widthAttr","calculateBlockWidth","calculateBlockHeight","render","scene","options","opacity","transparent","type","geometry","BoxGeometry","material","MeshBasicMaterial","defaultColor","originalColor","applyMatrix","Matrix4","makeTranslation","mesh","Mesh","position","set","addWidth","scale","block","edges","EdgesHelper","SceneManager","objects","push","add","text","getQualifiedName","no_methods","no_attrs","no_lines","file","District","height","children","buildings","_","each","getWidth","packer","GrowingPacker","sorted","sortBy","reverse","root","j","childrenWidth","concat","width","addBuilding","building","addChildDistrict","district","getChildBuildingsCount","sum","reduce","memo","./helpers","./scene_manager","2","hex","lum","hex_string","toString","slice","rgb","num_color","substr","str_color","Math","round","min","max","3","histogram","values","id","formatCount","d3","format","margin","top","right","bottom","left","linear","domain","range","layout","bins","ticks","xAxis","svg","axis","orient","select","append","attr","bar","selectAll","enter","dx","4","5","preprocessor_1","blocks_1","$","document","ready","initialize","on","processJSONInput","target","val","determineVisibility","object","setHex","preventDefault","preprocessor","processJSON","projectName","getJSON","Preprocessor","./blocks","./preprocessor","6","input","reader","FileReader","onload","evt","json","JSON","parse","result","alert","get","files","split","readAsText","histogram_1","jsonLength","fileName","cleanUp","widthType","heightType","city","districts","base","detectLevels","buildCity","size","maxDepth","_extends","countBy","_implements","eKeys","keys","sort","iKeys","find","remove","end","html","appendTo","sorted_length","json_length","floor","i_1","createBlock","pluck","obj","currentDistrict","buildDistricts","namespace","parentDistrict","findOrCreateDistrict","districtNames","undefined","./histogram","7","stats_1","_i","_a","dispose","init","animate","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","canvas","getElementById","setClearColor","setSize","domElement","addEventListener","onDocumentMouseMove","body","appendChild","camera","PerspectiveCamera","AmbientLight","aspect","updateProjectionMatrix","controls","OrbitControls","requestAnimationFrame","update","stats","visible","trait","event","intersectColor","coords","clientX","clientY","raycaster","setFromCamera","intersections","intersectObjects","tracker","intersectedBlock","css","display","style","cursor","Scene","Raycaster","./stats","8","Stats","showPanel","dom"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar helpers_1 = require(\"./helpers\");\r\nvar scene_manager_1 = require(\"./scene_manager\");\r\nvar Block = (function () {\r\n    function Block(name, parent) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.w = 0;\r\n        this.h = 0;\r\n        this.d = 0;\r\n        this.depth = parent === null ? 0 : parent.depth + 1;\r\n    }\r\n    Block.prototype.getColor = function () {\r\n        if (!this.color) {\r\n            this.color = new THREE.Color(parseInt(helpers_1.colorLuminance(this.parent.getColor().getHex(), 0.3).substring(1).toUpperCase(), 16));\r\n        }\r\n        return this.color;\r\n    };\r\n    Block.prototype.setColor = function (color) {\r\n        this.color = new THREE.Color(color);\r\n    };\r\n    Block.prototype.getX = function () {\r\n        return (this.parent === null) ? this.fit.x : this.parent.getX() + this.fit.x;\r\n    };\r\n    Block.prototype.getY = function () {\r\n        return (this.parent === null) ? this.fit.y : this.parent.getY() + this.fit.y;\r\n    };\r\n    Block.prototype.getTrackerText = function () {\r\n        return this.name;\r\n    };\r\n    return Block;\r\n}());\r\nexports.Block = Block;\r\nvar Building = (function (_super) {\r\n    __extends(Building, _super);\r\n    function Building(parent, data, heightLevels, widthLevels, heightAttr, widthAttr) {\r\n        _super.call(this, data.name, parent);\r\n        this.parent = parent;\r\n        this.data = data;\r\n        this.heightLevels = heightLevels;\r\n        this.widthLevels = widthLevels;\r\n        this.heightAttr = heightAttr;\r\n        this.widthAttr = widthAttr;\r\n        this.calculateBlockWidth(widthAttr, widthLevels);\r\n        this.calculateBlockHeight(heightAttr, heightLevels);\r\n    }\r\n    Building.prototype.calculateBlockWidth = function (widthAttr, widthLevels) {\r\n        for (var i = 0; i < 5; i++) {\r\n            if (this.data[widthAttr] <= widthLevels[i]) {\r\n                this.w = (i + 2) + 2;\r\n                this.h = (i + 2) + 2;\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    Building.prototype.calculateBlockHeight = function (heightAttr, heightLevels) {\r\n        for (var i = 0; i < 5; i++) {\r\n            if (this.data[heightAttr] <= heightLevels[i]) {\r\n                this.d = (i + 1) * 4;\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    Building.prototype.render = function (scene, depth) {\r\n        var options = { color: 0x2f9dbd };\r\n        if (this.data.abstract) {\r\n            options.color = 0x2fbdab;\r\n            options.opacity = 0.5;\r\n            options.transparent = true;\r\n        }\r\n        else if (this.data.type === \"interface\") {\r\n            options.color = 0x3c2fbd;\r\n        }\r\n        var geometry = new THREE.BoxGeometry(1, 1, 1);\r\n        var material = new THREE.MeshBasicMaterial(options);\r\n        material.defaultColor = options.color;\r\n        material.originalColor = options.color;\r\n        geometry.applyMatrix(new THREE.Matrix4().makeTranslation(0.5, 0.5, 0.5));\r\n        var mesh = new THREE.Mesh(geometry, material);\r\n        mesh.name = this.name ? this.name : '';\r\n        mesh.position.set(this.getX() - 1 * this.parent.addWidth + 1, 0 + depth / 2 + depth * 0.05, this.getY() - 1 * this.parent.addWidth + 1);\r\n        mesh.scale.set(this.w - 2, this.d, this.h - 2);\r\n        mesh.block = this;\r\n        var edges = new THREE.EdgesHelper(mesh, 0x000000);\r\n        mesh.edges = edges;\r\n        scene_manager_1.SceneManager.objects.push(mesh);\r\n        scene.add(mesh);\r\n        scene.add(edges);\r\n    };\r\n    Building.prototype.getTrackerText = function () {\r\n        var text = \"<em>&lt;&lt; \" + this.data.type + \" &gt;&gt;</em><br><strong>\" + this.name + \"</strong><br>\";\r\n        if (this.data.extends !== null) {\r\n            text += \" extends <em>\" + this.data.extends + \"</em><br>\";\r\n        }\r\n        if (this.data.implements !== null) {\r\n            text += \" implements <em>\" + this.data.implements + \"</em><br>\";\r\n        }\r\n        return text + (\"<br>Package: \" + this.parent.getQualifiedName() + \"<br><br>Methods: \" + this.data.no_methods + \"<br>Attributes: \" + this.data.no_attrs + \"<br>LOC: \" + this.data.no_lines + \"<br><br>File: \" + this.data.file);\r\n    };\r\n    return Building;\r\n}(Block));\r\nexports.Building = Building;\r\nvar District = (function (_super) {\r\n    __extends(District, _super);\r\n    function District(name, height, parent) {\r\n        _super.call(this, name, parent);\r\n        this.children = [];\r\n        this.buildings = [];\r\n        this.d = height;\r\n    }\r\n    District.prototype.render = function (scene, depth) {\r\n        var color = this.getColor().getHex();\r\n        var geometry = new THREE.BoxGeometry(1, 1, 1);\r\n        var material = new THREE.MeshBasicMaterial({ color: color });\r\n        material.defaultColor = material.originalColor = color;\r\n        geometry.applyMatrix(new THREE.Matrix4().makeTranslation(0.5, 0.5, 0.5));\r\n        var mesh = new THREE.Mesh(geometry, material);\r\n        mesh.name = this.name ? this.name : '';\r\n        mesh.position.set(this.getX() - 1 * this.addWidth, 0 + depth / 2 + depth * 0.05, this.getY() - 1 * this.addWidth);\r\n        mesh.scale.set(this.w - 2, this.d / 2, this.h - 2);\r\n        var edges = new THREE.EdgesHelper(mesh, 0x000000);\r\n        mesh.edges = edges;\r\n        scene.add(mesh);\r\n        scene.add(edges);\r\n        scene_manager_1.SceneManager.objects.push(mesh);\r\n        mesh.block = this;\r\n        _.each(this.children, function (e) { return e.render(scene, depth + 1); });\r\n        _.each(this.buildings, function (e) { return e.render(scene, depth + 1); });\r\n    };\r\n    District.prototype.getWidth = function () {\r\n        var packer = new GrowingPacker();\r\n        if (this.children.length === 0) {\r\n            var l = this.buildings.length;\r\n            var sorted = _.sortBy(this.buildings, function (e) { return e.w; }).reverse();\r\n            packer.fit(sorted);\r\n            this.w = packer.root.w + 2;\r\n            this.h = packer.root.h + 2;\r\n            this.fit = packer.root;\r\n            for (var i = 0; i < sorted.length; i++) {\r\n                var block = sorted[i];\r\n                for (var j = 0; j < l; j++) {\r\n                    if (this.buildings[j].data.file === block.data.file) {\r\n                        this.buildings[j].fit = block.fit;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (this.children.length != 0) {\r\n            var l = this.children.length;\r\n            for (var i = 0; i < l; i++) {\r\n                this.childrenWidth();\r\n            }\r\n            var sorted = _.sortBy(this.children.concat(this.buildings), function (e) { return e.w; }).reverse();\r\n            packer.fit(sorted);\r\n            this.w = packer.root.w + 2;\r\n            this.h = packer.root.h + 2;\r\n            this.fit = packer.root;\r\n            for (var i = 0; i < sorted.length; i++) {\r\n                var block = sorted[i];\r\n                for (var j = 0; j < this.buildings.length; j++) {\r\n                    if (block instanceof Building && this.buildings[j].data.file === block.data.file) {\r\n                        this.buildings[j].fit = block.fit;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.w;\r\n    };\r\n    District.prototype.childrenWidth = function () {\r\n        var l = this.children.length;\r\n        var width = 0;\r\n        for (var i = 0; i < l; i++) {\r\n            width += this.children[i].getWidth();\r\n        }\r\n        return width;\r\n    };\r\n    District.prototype.addBuilding = function (building) {\r\n        this.buildings.push(building);\r\n    };\r\n    District.prototype.addChildDistrict = function (district) {\r\n        this.children.push(district);\r\n    };\r\n    District.prototype.getQualifiedName = function () {\r\n        if (this.parent === null) {\r\n            return '';\r\n        }\r\n        if (this.name == 'none') {\r\n            return '<em>No package</em>';\r\n        }\r\n        return this.parent.getQualifiedName() + \"\\\\\" + this.name;\r\n    };\r\n    District.prototype.getChildBuildingsCount = function () {\r\n        var sum = _.reduce(this.children, function (memo, e) { return memo + e.getChildBuildingsCount(); }, 0);\r\n        return sum + this.buildings.length;\r\n    };\r\n    District.prototype.getTrackerText = function () {\r\n        if (this.depth == 0) {\r\n            return \"<em>City base</em><br><em>Buildings:</em>\" + this.getChildBuildingsCount();\r\n        }\r\n        return \"<em>Package:</em><strong>\" + this.getQualifiedName() + \"</strong><br><em>Buildings:</em>\" + this.getChildBuildingsCount();\r\n    };\r\n    return District;\r\n}(Block));\r\nexports.District = District;\r\n},{\"./helpers\":2,\"./scene_manager\":7}],2:[function(require,module,exports){\n\"use strict\";\r\nfunction colorLuminance(hex, lum) {\r\n    var hex_string = ('000000' + hex.toString(16)).slice(-6);\r\n    var rgb = \"#\";\r\n    lum = lum || 0;\r\n    for (var i = 0; i < 3; i++) {\r\n        var num_color = parseInt(hex_string.substr(i * 2, 2), 16);\r\n        var str_color = Math.round(Math.min(Math.max(0, num_color + (num_color * lum)), 255)).toString(16);\r\n        rgb += (\"00\" + str_color).substr(str_color.length);\r\n    }\r\n    return rgb;\r\n}\r\nexports.colorLuminance = colorLuminance;\r\n},{}],3:[function(require,module,exports){\n\"use strict\";\r\nfunction histogram(values, id) {\r\n    var formatCount = d3.format(\",.0f\");\r\n    var margin = { top: 20, right: 30, bottom: 20, left: 30 }, width = 460 - margin.left - margin.right, height = 220 - margin.top - margin.bottom;\r\n    var x = d3.scale.linear()\r\n        .domain([0, d3.max(values, function (d) { return d; })])\r\n        .range([0, width]);\r\n    var data = d3.layout.histogram().bins(x.ticks(30))(values);\r\n    var y = d3.scale.linear()\r\n        .domain([0, d3.max(data, function (d) { return d.y; })])\r\n        .range([height, 0]);\r\n    var xAxis = d3.svg.axis()\r\n        .scale(x)\r\n        .orient(\"bottom\");\r\n    var svg = d3.select(id).append(\"svg\")\r\n        .attr(\"width\", width + margin.left + margin.right)\r\n        .attr(\"height\", height + margin.top + margin.bottom)\r\n        .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n    var bar = svg.selectAll(\".bar\")\r\n        .data(data)\r\n        .enter().append(\"g\")\r\n        .attr(\"class\", \"bar\")\r\n        .attr(\"transform\", function (d) { return \"translate(\" + x(d.x) + \",\" + y(d.y) + \")\"; });\r\n    bar.append(\"rect\")\r\n        .attr(\"x\", 1)\r\n        .attr(\"width\", x(data[0].dx) - 1)\r\n        .attr(\"height\", function (d) { return height - y(d.y); });\r\n    bar.append(\"text\")\r\n        .attr(\"dy\", \".75em\")\r\n        .attr(\"y\", 6)\r\n        .attr(\"x\", x(data[0].dx) / 2)\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .text(function (d) { return formatCount(d.y); });\r\n    svg.append(\"g\")\r\n        .attr(\"class\", \"x axis\")\r\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n        .call(xAxis);\r\n}\r\nexports.histogram = histogram;\r\n},{}],4:[function(require,module,exports){\n\"use strict\";\r\n},{}],5:[function(require,module,exports){\n\"use strict\";\r\nvar scene_manager_1 = require(\"./scene_manager\");\r\nvar preprocessor_1 = require('./preprocessor');\r\nvar blocks_1 = require('./blocks');\r\n$(document).ready(function () {\r\n    scene_manager_1.SceneManager.initialize();\r\n    $(\"input[type=file]\").on('change', function (e) { return preprocessor_1.processJSONInput(e.target); });\r\n    $('input[name=\"filter-type\"]').on('change', function (e) {\r\n        var val = $('input[name=\"filter-type\"]:checked').val();\r\n        var l = scene_manager_1.SceneManager.objects.length;\r\n        for (var i = 0; i < l; i++) {\r\n            var block = scene_manager_1.SceneManager.objects[i].block;\r\n            if (block instanceof blocks_1.Building) {\r\n                scene_manager_1.SceneManager.determineVisibility(scene_manager_1.SceneManager.objects[i], block, val);\r\n            }\r\n        }\r\n    });\r\n    $('#class-extends').on('change', function (e) {\r\n        $('#class-implements').val('');\r\n        var val = $('#class-extends').val();\r\n        var l = scene_manager_1.SceneManager.objects.length;\r\n        for (var i = 0; i < l; i++) {\r\n            var object = scene_manager_1.SceneManager.objects[i];\r\n            var block = scene_manager_1.SceneManager.objects[i].block;\r\n            if (block instanceof blocks_1.Building) {\r\n                object.material.color.setHex(block.data.extends == val ? 0xeead12 : (object.material.defaultColor == 0xeead12 ? object.material.originalColor : object.material.defaultColor));\r\n                object.material.defaultColor = block.data.extends == val ? 0xeead12 : object.material.originalColor;\r\n            }\r\n        }\r\n    });\r\n    $('#class-implements').on('change', function (e) {\r\n        $('#class-extends').val('');\r\n        var val = $('#class-implements').val();\r\n        var l = scene_manager_1.SceneManager.objects.length;\r\n        for (var i = 0; i < l; i++) {\r\n            var object = scene_manager_1.SceneManager.objects[i];\r\n            var block = scene_manager_1.SceneManager.objects[i].block;\r\n            if (block instanceof blocks_1.Building) {\r\n                object.material.color.setHex(block.data.implements == val ? 0xeead12 : (object.material.defaultColor == 0xeead12 ? object.material.originalColor : object.material.defaultColor));\r\n                object.material.defaultColor = block.data.implements == val ? 0xeead12 : object.material.originalColor;\r\n            }\r\n        }\r\n    });\r\n    $('#settings-form').on('submit', function (e) {\r\n        e.preventDefault();\r\n        scene_manager_1.SceneManager.preprocessor.processJSON();\r\n    });\r\n    $('#demo-project-select').on('change', function (e) {\r\n        var projectName = $('#demo-project-select').val();\r\n        $.getJSON(\"./data/\" + projectName + \".json\", function (data) {\r\n            var preprocessor = new preprocessor_1.Preprocessor(data);\r\n            scene_manager_1.SceneManager.preprocessor = preprocessor;\r\n            preprocessor.processJSON(projectName);\r\n        });\r\n    });\r\n});\r\n},{\"./blocks\":1,\"./preprocessor\":6,\"./scene_manager\":7}],6:[function(require,module,exports){\n\"use strict\";\r\nvar blocks_1 = require('./blocks');\r\nvar scene_manager_1 = require('./scene_manager');\r\nvar histogram_1 = require('./histogram');\r\nfunction processJSONInput(input) {\r\n    var reader = new FileReader();\r\n    reader.onload = function (evt) {\r\n        var json;\r\n        try {\r\n            json = JSON.parse(evt.target.result);\r\n        }\r\n        catch (e) {\r\n            alert('Could not parse input file. Did you upload valid JSON?');\r\n            return;\r\n        }\r\n        var preprocessor = new Preprocessor(json);\r\n        scene_manager_1.SceneManager.preprocessor = preprocessor;\r\n        preprocessor.processJSON($(input).get(0).files[0].name.split('.')[0]);\r\n    };\r\n    reader.readAsText($(input).get(0).files[0], 'UTF-8');\r\n}\r\nexports.processJSONInput = processJSONInput;\r\nvar Preprocessor = (function () {\r\n    function Preprocessor(json) {\r\n        this.json = json;\r\n        this.heightLevels = [];\r\n        this.widthLevels = [];\r\n        this.jsonLength = json.length;\r\n    }\r\n    Preprocessor.prototype.processJSON = function (fileName) {\r\n        scene_manager_1.SceneManager.cleanUp();\r\n        this.widthType = $('input[name=\"width-type\"]:checked').val();\r\n        this.heightType = $('input[name=\"height-type\"]:checked').val();\r\n        this.widthAttr = $('#width-attribute').val();\r\n        this.heightAttr = $('#height-attribute').val();\r\n        if (fileName) {\r\n            $('#project-name').text(fileName);\r\n        }\r\n        $('#project-objects').text(this.json.length);\r\n        this.city = {\r\n            districts: { base: new blocks_1.District('base', 1, null) },\r\n            buildings: []\r\n        };\r\n        this.detectLevels();\r\n        this.buildCity();\r\n        var buildingCount = this.city.buildings.length;\r\n        var districtsCount = _.size(this.city.districts);\r\n        var base = this.city.districts['base'];\r\n        this.city.districts['base'].setColor(0x0e4467);\r\n        var maxDepth = _.max(this.city.districts, function (e) { return e.depth; }).depth;\r\n        _.each(this.city.districts, function (e) { return e.addWidth = maxDepth - e.depth; });\r\n        base.getWidth();\r\n        base.render(scene_manager_1.SceneManager.scene, 0);\r\n        var _extends = _.countBy(this.city.buildings, function (e) { return e.data.extends; });\r\n        delete _extends['null'];\r\n        var _implements = _.countBy(this.city.buildings, function (e) { return e.data.implements; });\r\n        delete _implements['null'];\r\n        var eKeys = Object.keys(_extends).sort();\r\n        var iKeys = Object.keys(_implements).sort();\r\n        $('#class-extends').find('option').remove().end().append('<option>-</option>').val('');\r\n        for (var i = 0; i < eKeys.length; i++) {\r\n            $('<option/>').val(eKeys[i]).html('(' + _extends[eKeys[i]] + ') ' + eKeys[i]).appendTo('#class-extends');\r\n        }\r\n        $('#class-implements').find('option').remove().end().append('<option>-</option>').val('');\r\n        for (var i = 0; i < iKeys.length; i++) {\r\n            $('<option/>').val(iKeys[i]).html('(' + _implements[iKeys[i]] + ') ' + iKeys[i]).appendTo('#class-implements');\r\n        }\r\n    };\r\n    Preprocessor.prototype.detectLevels = function () {\r\n        var sorted = _.sortBy(this.json, this.heightAttr);\r\n        var sorted_length = sorted.length;\r\n        var json_length = this.json.length;\r\n        if (this.heightType == \"evenly\") {\r\n            this.heightLevels = [\r\n                sorted[Math.floor(json_length / 5)][this.heightAttr],\r\n                sorted[Math.floor(json_length / 5 * 2)][this.heightAttr],\r\n                sorted[Math.floor(json_length / 5 * 3)][this.heightAttr],\r\n                sorted[Math.floor(json_length / 5 * 4)][this.heightAttr],\r\n                sorted[sorted_length - 1][this.heightAttr],\r\n            ];\r\n        }\r\n        else {\r\n            this.heightLevels = [\r\n                Math.floor(sorted[sorted_length - 1][this.heightAttr] / 5),\r\n                Math.floor(sorted[sorted_length - 1][this.heightAttr] / 4),\r\n                Math.floor(sorted[sorted_length - 1][this.heightAttr] / 3),\r\n                Math.floor(sorted[sorted_length - 1][this.heightAttr] / 2),\r\n                Math.floor(sorted[sorted_length - 1][this.heightAttr] / 1),\r\n            ];\r\n        }\r\n        for (var i_1 = 1; i_1 < sorted_length; i_1++) {\r\n            if (this.heightLevels[i_1] == this.heightLevels[i_1 - 1]) {\r\n                this.heightLevels[i_1]++;\r\n            }\r\n            else if (this.heightLevels[i_1] < this.heightLevels[i_1 - 1]) {\r\n                this.heightLevels[i_1] = this.heightLevels[i_1 - 1] + 1;\r\n            }\r\n            else if (!this.heightLevels[i_1]) {\r\n                break;\r\n            }\r\n        }\r\n        sorted = _.sortBy(this.json, this.widthAttr);\r\n        if (this.widthType == \"evenly\") {\r\n            this.widthLevels = [\r\n                sorted[Math.floor(json_length / 5)][this.widthAttr],\r\n                sorted[Math.floor(json_length / 5 * 2)][this.widthAttr],\r\n                sorted[Math.floor(json_length / 5 * 3)][this.widthAttr],\r\n                sorted[Math.floor(json_length / 5 * 4)][this.widthAttr],\r\n                sorted[sorted_length - 1].no_attrs,\r\n            ];\r\n        }\r\n        else {\r\n            this.widthLevels = [\r\n                Math.floor(sorted[sorted_length - 1][this.widthAttr] / 5),\r\n                Math.floor(sorted[sorted_length - 1][this.widthAttr] / 4),\r\n                Math.floor(sorted[sorted_length - 1][this.widthAttr] / 3),\r\n                Math.floor(sorted[sorted_length - 1][this.widthAttr] / 2),\r\n                Math.floor(sorted[sorted_length - 1][this.widthAttr] / 1),\r\n            ];\r\n        }\r\n        for (var i = 1; i < sorted.length; i++) {\r\n            if (this.widthLevels[i] == this.widthLevels[i - 1]) {\r\n                this.widthLevels[i]++;\r\n            }\r\n            else if (this.widthLevels[i] < this.widthLevels[i - 1]) {\r\n                this.widthLevels[i] = this.widthLevels[i - 1] + 1;\r\n            }\r\n            else if (!this.widthLevels[i]) {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    Preprocessor.prototype.buildCity = function () {\r\n        for (var i = 0; i < this.jsonLength; i++) {\r\n            this.createBlock(this.json[i]);\r\n        }\r\n        $('#histogram-loc, #histogram-attributes, #histogram-methods').html('');\r\n        histogram_1.histogram(_.pluck(this.json, 'no_lines'), '#histogram-loc');\r\n        histogram_1.histogram(_.pluck(this.json, 'no_attrs'), '#histogram-attributes');\r\n        histogram_1.histogram(_.pluck(this.json, 'no_methods'), '#histogram-methods');\r\n    };\r\n    Preprocessor.prototype.createBlock = function (obj) {\r\n        var currentDistrict = this.buildDistricts(obj.namespace);\r\n        var building = new blocks_1.Building(currentDistrict, obj, this.heightLevels, this.widthLevels, this.heightAttr, this.widthAttr);\r\n        currentDistrict.addBuilding(building);\r\n        this.city.buildings.push(building);\r\n    };\r\n    Preprocessor.prototype.buildDistricts = function (namespace) {\r\n        var parentDistrict = this.city.districts['base'];\r\n        if (!namespace || namespace === '') {\r\n            return this.findOrCreateDistrict('none', 1, parentDistrict);\r\n        }\r\n        var districtNames = namespace.split('\\\\');\r\n        var length = districtNames.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var district = this.findOrCreateDistrict(districtNames[i], 1, parentDistrict);\r\n            parentDistrict = district;\r\n        }\r\n        return district;\r\n    };\r\n    Preprocessor.prototype.findOrCreateDistrict = function (name, height, parent) {\r\n        if (this.city.districts[name] !== undefined) {\r\n            return this.city.districts[name];\r\n        }\r\n        var district = new blocks_1.District(name, height, parent);\r\n        this.city.districts[name] = district;\r\n        parent.addChildDistrict(district);\r\n        return district;\r\n    };\r\n    return Preprocessor;\r\n}());\r\nexports.Preprocessor = Preprocessor;\r\n},{\"./blocks\":1,\"./histogram\":3,\"./scene_manager\":7}],7:[function(require,module,exports){\n\"use strict\";\r\nvar stats_1 = require(\"./stats\");\r\nvar SceneManager = (function () {\r\n    function SceneManager() {\r\n    }\r\n    SceneManager.cleanUp = function () {\r\n        for (var _i = 0, _a = this.objects; _i < _a.length; _i++) {\r\n            var obj = _a[_i];\r\n            SceneManager.scene.remove(obj);\r\n            SceneManager.scene.remove(obj.edges);\r\n            obj.edges.geometry.dispose();\r\n            obj.edges.material.dispose();\r\n            obj.geometry.dispose();\r\n            obj.material.dispose();\r\n        }\r\n        SceneManager.objects = [];\r\n    };\r\n    SceneManager.initialize = function () {\r\n        SceneManager.init();\r\n        SceneManager.animate();\r\n    };\r\n    SceneManager.init = function () {\r\n        var width = window.innerWidth;\r\n        var height = window.innerHeight;\r\n        SceneManager.renderer = new THREE.WebGLRenderer({ antialias: true, canvas: document.getElementById('canvas') });\r\n        SceneManager.renderer.setClearColor(0xcccccc, 1);\r\n        SceneManager.renderer.setSize(width, height);\r\n        SceneManager.renderer.domElement.addEventListener('mousemove', SceneManager.onDocumentMouseMove, false);\r\n        document.body.appendChild(SceneManager.renderer.domElement);\r\n        SceneManager.camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 10000);\r\n        SceneManager.camera.position.set(70, 70, 150);\r\n        SceneManager.scene.add(SceneManager.camera);\r\n        SceneManager.scene.add(new THREE.AmbientLight(0xcccccc));\r\n        window.addEventListener('resize', function () {\r\n            var width = window.innerWidth;\r\n            var height = window.innerHeight;\r\n            SceneManager.renderer.setSize(width, height);\r\n            SceneManager.camera.aspect = width / height;\r\n            SceneManager.camera.updateProjectionMatrix();\r\n        });\r\n        SceneManager.controls = new THREE.OrbitControls(SceneManager.camera, SceneManager.renderer.domElement);\r\n    };\r\n    SceneManager.animate = function () {\r\n        requestAnimationFrame(SceneManager.animate);\r\n        SceneManager.renderer.render(SceneManager.scene, SceneManager.camera);\r\n        SceneManager.controls.update();\r\n        stats_1.stats.update();\r\n    };\r\n    SceneManager.determineVisibility = function (mesh, building, val) {\r\n        switch (val) {\r\n            case 'all':\r\n                mesh.visible = mesh.edges.visible = true;\r\n                break;\r\n            case 'abstract':\r\n                mesh.visible = mesh.edges.visible = building.data.abstract;\r\n                break;\r\n            case 'final':\r\n                mesh.visible = mesh.edges.visible = building.data.final;\r\n                break;\r\n            case 'interface':\r\n                mesh.visible = mesh.edges.visible = building.data.type === 'interface';\r\n                break;\r\n            case 'trait':\r\n                mesh.visible = mesh.edges.visible = building.data.trait;\r\n                break;\r\n        }\r\n    };\r\n    SceneManager.onDocumentMouseMove = function (event) {\r\n        event.preventDefault();\r\n        var intersectColor = 0x00D66B;\r\n        var coords = {\r\n            x: (event.clientX / window.innerWidth) * 2 - 1,\r\n            y: -(event.clientY / window.innerHeight) * 2 + 1\r\n        };\r\n        SceneManager.raycaster.setFromCamera(coords, SceneManager.camera);\r\n        var intersections = SceneManager.raycaster.intersectObjects(SceneManager.objects);\r\n        var tracker = $('#tracker');\r\n        if (intersections.length > 0) {\r\n            if (SceneManager.intersectedBlock != intersections[0].object) {\r\n                if (SceneManager.intersectedBlock)\r\n                    SceneManager.intersectedBlock.material.color.setHex(SceneManager.intersectedBlock.material.defaultColor);\r\n                SceneManager.intersectedBlock = intersections[0].object;\r\n                SceneManager.intersectedBlock.material.color.setHex(intersectColor);\r\n                tracker.html(SceneManager.intersectedBlock.block.getTrackerText());\r\n            }\r\n            tracker.css({ top: (event.clientY + 10) + \"px\", left: (event.clientX + 10) + \"px\", display: 'block' });\r\n            document.body.style.cursor = 'pointer';\r\n        }\r\n        else if (SceneManager.intersectedBlock) {\r\n            SceneManager.intersectedBlock.material.color.setHex(SceneManager.intersectedBlock.material.defaultColor);\r\n            SceneManager.intersectedBlock = null;\r\n            tracker.css('display', 'none');\r\n            document.body.style.cursor = 'auto';\r\n        }\r\n    };\r\n    SceneManager.objects = [];\r\n    SceneManager.scene = new THREE.Scene();\r\n    SceneManager.raycaster = new THREE.Raycaster();\r\n    return SceneManager;\r\n}());\r\nexports.SceneManager = SceneManager;\r\n},{\"./stats\":8}],8:[function(require,module,exports){\n\"use strict\";\r\nexports.stats = new Stats();\r\nexports.stats.showPanel(0);\r\nexports.stats.dom.style.position = 'absolute';\r\nexports.stats.dom.style.top = 'auto';\r\nexports.stats.dom.style.left = 'auto';\r\nexports.stats.dom.style.right = '2px';\r\nexports.stats.dom.style.bottom = '26px';\r\ndocument.body.appendChild(exports.stats.dom);\r\n},{}]},{},[1,2,3,4,5,6,7,8])\n\n","/// <reference path=\"../../typings/index.d.ts\" />\n\ndeclare var GrowingPacker: any;\n\nimport { colorLuminance } from \"./helpers\";\nimport { BuildingData, ExtendedMesh, ExtendedMeshBasicMaterial } from \"./interfaces\";\nimport { SceneManager } from \"./scene_manager\";\n\nexport abstract class Block {\n  protected color: THREE.Color;\n  public fit: { x: number, y: number };\n  public addWidth: number;\n\n  public w: number = 0;\n  public h: number = 0;\n  public d: number = 0;\n  public depth: number;\n\n  constructor(protected name: string, protected parent: Block) {\n    this.depth = parent === null ? 0 : parent.depth + 1;\n  }\n\n  abstract render(scene: THREE.Scene, depth: number): void;\n\n  public getColor(): THREE.Color {\n    if (!this.color) {\n      this.color = new THREE.Color(parseInt(colorLuminance(this.parent.getColor().getHex(), 0.3).substring(1).toUpperCase(), 16));\n    }\n\n    return this.color;\n  }\n\n  public setColor(color: number) {\n    this.color = new THREE.Color(color);\n  }\n\n  public getX(): number {\n    return (this.parent === null) ? this.fit.x : this.parent.getX() + this.fit.x;\n  }\n\n  public getY(): number {\n    return (this.parent === null) ? this.fit.y : this.parent.getY() + this.fit.y;\n  }\n\n  public getTrackerText() {\n    return this.name;\n  }\n}\n\nexport class Building extends Block {\n  constructor(public parent: District,\n    public data: BuildingData,\n    public heightLevels: number[],\n    public widthLevels: number[],\n    public heightAttr: string,\n    public widthAttr: string) {\n    super(data.name, parent);\n\n    this.calculateBlockWidth(widthAttr, widthLevels);\n    this.calculateBlockHeight(heightAttr, heightLevels);\n  }\n\n  private calculateBlockWidth(widthAttr: string, widthLevels: number[]) {\n    for (var i = 0; i < 5; i++) {\n      if (this.data[widthAttr] <= widthLevels[i]) {\n        this.w = (i + 2) + 2;   // +2 as base width; +2 for margin\n        this.h = (i + 2) + 2;   // +2 as base width; +2 for margin\n        break;\n      }\n    }\n  }\n\n  private calculateBlockHeight(heightAttr: string, heightLevels: number[]) {\n    for (let i = 0; i < 5; i++) {\n      if (this.data[heightAttr] <= heightLevels[i]) {\n        this.d = (i + 1) * 4;\n        break;\n      }\n    }\n  }\n\n  public render(scene: THREE.Scene, depth: number) {\n    var options: THREE.MeshBasicMaterialParameters = { color: 0x2f9dbd };\n\n    if (this.data.abstract) {\n      options.color = 0x2fbdab;\n      options.opacity = 0.5\n      options.transparent = true;\n    } else if (this.data.type === \"interface\") {\n      options.color = 0x3c2fbd;\n    }\n\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var material = <ExtendedMeshBasicMaterial>new THREE.MeshBasicMaterial(options);\n\n    material.defaultColor = <number>options.color;\n    material.originalColor = <number>options.color;\n\n    geometry.applyMatrix(new THREE.Matrix4().makeTranslation(0.5, 0.5, 0.5));\n\n    var mesh: ExtendedMesh = <ExtendedMesh>new THREE.Mesh(geometry, material);\n    mesh.name = this.name ? this.name : '';\n\n    mesh.position.set(this.getX() - 1 * this.parent.addWidth + 1, 0 + depth / 2 + depth * 0.05, this.getY() - 1 * this.parent.addWidth + 1);\n    mesh.scale.set(this.w - 2, this.d, this.h - 2);\n\n    mesh.block = this;\n\n    var edges = new THREE.EdgesHelper(mesh, 0x000000);\n    mesh.edges = edges;\n\n    SceneManager.objects.push(mesh);\n\n    scene.add(mesh);\n    scene.add(edges);\n  }\n\n  public getTrackerText() {\n    var text = `<em>&lt;&lt; ${this.data.type} &gt;&gt;</em><br><strong>${this.name}</strong><br>`;\n\n    if (this.data.extends !== null) {\n      text += ` extends <em>${this.data.extends}</em><br>`;\n    }\n\n    if (this.data.implements !== null) {\n      text += ` implements <em>${this.data.implements}</em><br>`;\n    }\n\n    return text + `<br>Package: ${this.parent.getQualifiedName()}<br><br>Methods: ${this.data.no_methods}<br>Attributes: ${this.data.no_attrs}<br>LOC: ${this.data.no_lines}<br><br>File: ${this.data.file}`;\n  }\n}\n\nexport class District extends Block {\n  protected children: District[] = [];\n  protected buildings: Building[] = [];\n\n  constructor(name: string, height: number, parent: Block) {\n    super(name, parent);\n\n    this.d = height;\n  }\n\n  public render(scene: THREE.Scene, depth: number) {\n    var color = this.getColor().getHex();\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var material = <ExtendedMeshBasicMaterial>new THREE.MeshBasicMaterial({ color: color });\n\n    material.defaultColor = material.originalColor = color;\n\n    geometry.applyMatrix(new THREE.Matrix4().makeTranslation(0.5, 0.5, 0.5));\n\n    var mesh: ExtendedMesh = <ExtendedMesh>new THREE.Mesh(geometry, material);\n    mesh.name = this.name ? this.name : '';\n\n    mesh.position.set(this.getX() - 1 * this.addWidth, 0 + depth / 2 + depth * 0.05, this.getY() - 1 * this.addWidth);\n    mesh.scale.set(this.w - 2, this.d / 2, this.h - 2);\n\n    var edges = new THREE.EdgesHelper(mesh, 0x000000);\n\n    mesh.edges = edges;\n\n    scene.add(mesh);\n    scene.add(edges);\n\n    SceneManager.objects.push(mesh);\n\n    mesh.block = this;\n\n    _.each(this.children, (e) => e.render(scene, depth + 1));\n    _.each(this.buildings, (e) => e.render(scene, depth + 1))\n  }\n\n  public getWidth(): number {\n    let packer = new GrowingPacker();\n\n    // if the district is of a top level\n    if (this.children.length === 0) {\n      let l = this.buildings.length;\n      let sorted = _.sortBy(this.buildings, (e) => e.w).reverse();\n\n      packer.fit(sorted);\n\n      this.w = packer.root.w + 2;\n      this.h = packer.root.h + 2;\n      this.fit = packer.root;\n\n      for (let i = 0; i < sorted.length; i++) {\n        let block = sorted[i];\n\n        for (let j = 0; j < l; j++) {\n          if (this.buildings[j].data.file === block.data.file) {\n            this.buildings[j].fit = block.fit;\n          }\n        }\n      }\n      // if has child districts\n    } else if (this.children.length != 0) {\n      let l = this.children.length;\n\n      // first calculate w/h on children\n      for (let i = 0; i < l; i++) {\n        this.childrenWidth();\n      }\n\n      let sorted = _.sortBy((<Block[]>this.children).concat(this.buildings), (e) => e.w).reverse();\n      packer.fit(sorted);\n\n      this.w = packer.root.w + 2;\n      this.h = packer.root.h + 2;\n      this.fit = packer.root;\n\n      for (let i = 0; i < sorted.length; i++) {\n        let block = sorted[i];\n\n        for (let j = 0; j < this.buildings.length; j++) {\n          if (block instanceof Building && this.buildings[j].data.file === block.data.file) {\n            this.buildings[j].fit = block.fit;\n          }\n        }\n      }\n    }\n\n    return this.w;\n  }\n\n  public childrenWidth() {\n    let l = this.children.length;\n    let width = 0;\n\n    for (let i = 0; i < l; i++) {\n      width += this.children[i].getWidth();\n    }\n\n    return width;\n  }\n\n  public addBuilding(building: Building) {\n    this.buildings.push(building);\n  }\n\n  public addChildDistrict(district: District) {\n    this.children.push(district);\n  }\n\n  public getQualifiedName(): string {\n    if (this.parent === null) {\n      return '';\n    }\n\n    if (this.name == 'none') {\n      return '<em>No package</em>';\n    }\n\n    return `${(<District>this.parent).getQualifiedName()}\\\\${this.name}`;\n  }\n\n  public getChildBuildingsCount(): number {\n    var sum = _.reduce(this.children, (memo: number, e: District): number => memo + e.getChildBuildingsCount(), 0);\n\n    return sum + this.buildings.length;\n  }\n\n  public getTrackerText() {\n    if (this.depth == 0) {\n      return `<em>City base</em><br><em>Buildings:</em>${this.getChildBuildingsCount()}`\n    }\n\n    return `<em>Package:</em><strong>${this.getQualifiedName()}</strong><br><em>Buildings:</em>${this.getChildBuildingsCount()}`;\n  }\n}","// http://www.sitepoint.com/javascript-generate-lighter-darker-color/\n\nexport function colorLuminance(hex: number, lum?: number) {\n  let hex_string = ('000000' + hex.toString(16)).slice(-6);\n  let rgb = \"#\";\n\n  lum = lum || 0;\n\n  for (let i = 0; i < 3; i++) {\n    let num_color = parseInt(hex_string.substr(i * 2, 2), 16);\n    let str_color = Math.round(Math.min(Math.max(0, num_color + (num_color * lum)), 255)).toString(16);\n\n    rgb += (\"00\" + str_color).substr(str_color.length);\n  }\n\n  return rgb;\n}\n","/// <reference path=\"../../typings/index.d.ts\" />\n\n/**\n * Based on http://bl.ocks.org/mbostock/3048450\n */\nexport function histogram(values: number[], id: string) {\n  // A formatter for counts.\n  var formatCount = d3.format(\",.0f\");\n\n  var margin = { top: 20, right: 30, bottom: 20, left: 30 },\n    width = 460 - margin.left - margin.right,\n    height = 220 - margin.top - margin.bottom;\n\n  var x = d3.scale.linear()\n    .domain([0, d3.max(values, (d) => d)])\n    .range([0, width]);\n\n  // Generate a histogram using twenty uniformly-spaced bins.\n  var data = d3.layout.histogram().bins(x.ticks(30))(values);\n\n  var y = d3.scale.linear()\n    .domain([0, d3.max(data, (d) => d.y)])\n    .range([height, 0]);\n\n  var xAxis = d3.svg.axis()\n    .scale(x)\n    .orient(\"bottom\");\n\n  var svg = d3.select(id).append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  var bar = svg.selectAll(\".bar\")\n    .data(data)\n    .enter().append(\"g\")\n    .attr(\"class\", \"bar\")\n    .attr(\"transform\", (d) => \"translate(\" + x(d.x) + \",\" + y(d.y) + \")\");\n\n  bar.append(\"rect\")\n    .attr(\"x\", 1)\n    .attr(\"width\", x(data[0].dx) - 1)\n    .attr(\"height\", (d) => height - y(d.y));\n\n  bar.append(\"text\")\n    .attr(\"dy\", \".75em\")\n    .attr(\"y\", 6)\n    .attr(\"x\", x(data[0].dx) / 2)\n    .attr(\"text-anchor\", \"middle\")\n    .text((d) => formatCount(d.y));\n\n  svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n}\n","/// <reference path=\"../../typings/index.d.ts\" />\r\nimport { SceneManager } from \"./scene_manager\";\r\nimport { ExtendedMesh, ExtendedMeshBasicMaterial } from \"./interfaces\";\r\nimport { processJSONInput, Preprocessor } from './preprocessor';\r\nimport { Building } from './blocks';\r\n\r\n$(document).ready(() => {\r\n  SceneManager.initialize();\r\n\r\n  $(\"input[type=file]\").on('change', (e) => processJSONInput(<HTMLInputElement>e.target));\r\n\r\n  $('input[name=\"filter-type\"]').on('change', (e) => {\r\n    let val = $('input[name=\"filter-type\"]:checked').val();\r\n    let l = SceneManager.objects.length;\r\n\r\n    for (var i = 0; i < l; i++) {\r\n      let block = SceneManager.objects[i].block;\r\n\r\n      if (block instanceof Building) {\r\n        SceneManager.determineVisibility(SceneManager.objects[i], block, val);\r\n      }\r\n    }\r\n  });\r\n\r\n  $('#class-extends').on('change', (e) => {\r\n    $('#class-implements').val('');\r\n\r\n    let val = $('#class-extends').val();\r\n    let l = SceneManager.objects.length;\r\n\r\n    for (let i = 0; i < l; i++) {\r\n      let object = SceneManager.objects[i];\r\n      let block = SceneManager.objects[i].block;\r\n\r\n      if (block instanceof Building) {\r\n        object.material.color.setHex(block.data.extends == val ? 0xeead12 : (object.material.defaultColor == 0xeead12 ? object.material.originalColor : object.material.defaultColor));\r\n        object.material.defaultColor = block.data.extends == val ? 0xeead12 : object.material.originalColor;\r\n      }\r\n    }\r\n  });\r\n\r\n  $('#class-implements').on('change', (e) => {\r\n    $('#class-extends').val('');\r\n\r\n    let val = $('#class-implements').val();\r\n    let l = SceneManager.objects.length;\r\n\r\n    for (let i = 0; i < l; i++) {\r\n      let object = SceneManager.objects[i];\r\n      let block = SceneManager.objects[i].block;\r\n\r\n      if (block instanceof Building) {\r\n        object.material.color.setHex(block.data.implements == val ? 0xeead12 : (object.material.defaultColor == 0xeead12 ? object.material.originalColor : object.material.defaultColor));\r\n        object.material.defaultColor = block.data.implements == val ? 0xeead12 : object.material.originalColor;\r\n      }\r\n    }\r\n  });\r\n\r\n  $('#settings-form').on('submit', (e) => {\r\n    e.preventDefault();\r\n    SceneManager.preprocessor.processJSON();\r\n  });\r\n\r\n  $('#demo-project-select').on('change', (e) => {\r\n    let projectName = $('#demo-project-select').val();\r\n\r\n    $.getJSON(`./data/${projectName}.json`, (data) => {\r\n      let preprocessor = new Preprocessor(data);\r\n      SceneManager.preprocessor = preprocessor;\r\n\r\n      preprocessor.processJSON(projectName);\r\n    });\r\n  });\r\n});","/// <reference path=\"../../typings/index.d.ts\" />\n\nimport { City, InputObject } from './interfaces';\nimport { Building, District} from './blocks';\nimport { SceneManager } from './scene_manager';\nimport { histogram } from './histogram';\n\nexport function processJSONInput(input: HTMLInputElement) {\n  var reader = new FileReader();\n\n  reader.onload = (evt) => {\n    let json: Array<InputObject>;\n\n    try {\n      json = JSON.parse(evt.target.result);\n    } catch(e) {\n      alert('Could not parse input file. Did you upload valid JSON?');\n      return;\n    }\n\n    let preprocessor = new Preprocessor(json);\n    SceneManager.preprocessor = preprocessor;\n\n    preprocessor.processJSON($(input).get(0).files[0].name.split('.')[0]);\n  }\n\n  reader.readAsText($(input).get(0).files[0], 'UTF-8');\n}\n\nexport class Preprocessor {\n  private jsonLength: number;\n  private heightLevels: number[] = [];\n  private widthLevels: number[] = [];\n\n  private widthType: string;\n  private heightType: string;\n  private widthAttr: string;\n  private heightAttr: string;\n\n  private city: City;\n\n  constructor(private json: Array<InputObject>) {\n    this.jsonLength = json.length;\n  }\n\n  public processJSON(fileName?: string) {\n    SceneManager.cleanUp();\n\n    this.widthType  = $('input[name=\"width-type\"]:checked').val();\n    this.heightType = $('input[name=\"height-type\"]:checked').val();\n    this.widthAttr  = $('#width-attribute').val();\n    this.heightAttr = $('#height-attribute').val();\n\n    if (fileName) {\n      $('#project-name').text(fileName);\n    }\n\n    $('#project-objects').text(this.json.length);\n\n    this.city = {\n      districts: { base: new District('base', 1, null) },\n      buildings: []\n    };\n\n    this.detectLevels();\n    this.buildCity();\n\n    var buildingCount = this.city.buildings.length;\n    var districtsCount = _.size(this.city.districts);\n    var base = this.city.districts['base'];\n    this.city.districts['base'].setColor(0x0e4467);\n\n    // find out max depth of a district\n    var maxDepth = _.max(this.city.districts, (e) => e.depth).depth;\n\n    // set margin for each district by finding his nesting level\n    _.each(this.city.districts, (e) => e.addWidth = maxDepth - e.depth);\n\n    // calculate minimal dimensions for blocks\n    base.getWidth();\n    base.render(SceneManager.scene, 0);\n\n    // fill selects\n    let _extends = _.countBy(this.city.buildings, (e) => e.data.extends);\n    delete _extends['null'];\n\n    let _implements = _.countBy(this.city.buildings, (e) => e.data.implements);\n    delete _implements['null'];\n\n    var eKeys = Object.keys(_extends).sort();\n    var iKeys = Object.keys(_implements).sort();\n\n    $('#class-extends').find('option').remove().end().append('<option>-</option>').val('');\n\n    for(var i = 0; i < eKeys.length; i++) {\n      $('<option/>').val(eKeys[i]).html('(' + _extends[eKeys[i]] + ') ' + eKeys[i]).appendTo('#class-extends');\n    }\n\n    $('#class-implements').find('option').remove().end().append('<option>-</option>').val('');\n\n    for(var i = 0; i < iKeys.length; i++) {\n      $('<option/>').val(iKeys[i]).html('(' + _implements[iKeys[i]] + ') ' + iKeys[i]).appendTo('#class-implements');\n    }\n  }\n\n  private detectLevels() {\n    let sorted: InputObject[] = _.sortBy(this.json, this.heightAttr);\n    let sorted_length = sorted.length;\n    let json_length = this.json.length;\n\n    if (this.heightType == \"evenly\") {\n      this.heightLevels = [\n        <number>sorted[Math.floor(json_length / 5)][this.heightAttr],\n        <number>sorted[Math.floor(json_length / 5 * 2)][this.heightAttr],\n        <number>sorted[Math.floor(json_length / 5 * 3)][this.heightAttr],\n        <number>sorted[Math.floor(json_length / 5 * 4)][this.heightAttr],\n        <number>sorted[sorted_length - 1][this.heightAttr],\n      ];\n    } else {\n      this.heightLevels = [\n        Math.floor(<number>sorted[sorted_length - 1][this.heightAttr] / 5),\n        Math.floor(<number>sorted[sorted_length - 1][this.heightAttr] / 4),\n        Math.floor(<number>sorted[sorted_length - 1][this.heightAttr] / 3),\n        Math.floor(<number>sorted[sorted_length - 1][this.heightAttr] / 2),\n        Math.floor(<number>sorted[sorted_length - 1][this.heightAttr] / 1),\n      ];\n    }\n\n    for (let i = 1; i < sorted_length; i++) {\n      if (this.heightLevels[i] == this.heightLevels[i - 1]) {\n        this.heightLevels[i]++;\n      } else if (this.heightLevels[i] < this.heightLevels[i - 1]) {\n        this.heightLevels[i] = this.heightLevels[i - 1] + 1;\n      } else if (! this.heightLevels[i]) {\n        break;\n      }\n    }\n\n    sorted = _.sortBy(this.json, this.widthAttr);\n\n    if (this.widthType == \"evenly\") {\n      this.widthLevels = [\n        <number>sorted[Math.floor(json_length / 5)][this.widthAttr],\n        <number>sorted[Math.floor(json_length / 5 * 2)][this.widthAttr],\n        <number>sorted[Math.floor(json_length / 5 * 3)][this.widthAttr],\n        <number>sorted[Math.floor(json_length / 5 * 4)][this.widthAttr],\n        <number>sorted[sorted_length - 1].no_attrs,\n      ];\n    } else {\n      this.widthLevels = [\n        Math.floor(<number>sorted[sorted_length - 1][this.widthAttr] / 5),\n        Math.floor(<number>sorted[sorted_length - 1][this.widthAttr] / 4),\n        Math.floor(<number>sorted[sorted_length - 1][this.widthAttr] / 3),\n        Math.floor(<number>sorted[sorted_length - 1][this.widthAttr] / 2),\n        Math.floor(<number>sorted[sorted_length - 1][this.widthAttr] / 1),\n      ];\n    }\n\n    for (var i = 1; i < sorted.length; i++) {\n      if (this.widthLevels[i] == this.widthLevels[i - 1]) {\n        this.widthLevels[i]++;\n      } else if (this.widthLevels[i] < this.widthLevels[i - 1]) {\n        this.widthLevels[i] = this.widthLevels[i - 1] + 1;\n      } else if (! this.widthLevels[i]) {\n        break;\n      }\n    }\n  }\n\n  private buildCity() {\n    for (let i = 0; i < this.jsonLength; i++) {\n      this.createBlock(this.json[i]);\n    }\n\n    $('#histogram-loc, #histogram-attributes, #histogram-methods').html('');\n    histogram(_.pluck(this.json, 'no_lines'), '#histogram-loc');\n    histogram(_.pluck(this.json, 'no_attrs'), '#histogram-attributes');\n    histogram(_.pluck(this.json, 'no_methods'), '#histogram-methods');\n  }\n\n  private createBlock(obj: InputObject) {\n    var currentDistrict = this.buildDistricts(obj.namespace);\n    var building = new Building(currentDistrict, obj, this.heightLevels, this.widthLevels, this.heightAttr, this.widthAttr);\n\n    currentDistrict.addBuilding(building);\n    this.city.buildings.push(building);\n  }\n\n  private buildDistricts(namespace: string) {\n    var parentDistrict = this.city.districts['base'];\n\n    if (! namespace || namespace === '') {\n      return this.findOrCreateDistrict('none', 1, parentDistrict);\n    }\n\n    var districtNames = namespace.split('\\\\');\n    var length = districtNames.length;\n\n    for (var i = 0; i < length; i++) {\n      var district = this.findOrCreateDistrict(districtNames[i], 1, parentDistrict);\n      parentDistrict = district;\n    }\n\n    return district;\n  }\n\n  private findOrCreateDistrict(name: string, height: number, parent: District) {\n    if (this.city.districts[name] !== undefined) {\n      return this.city.districts[name];\n    }\n\n    var district = new District(name, height, parent);\n    this.city.districts[name] = district;\n\n    parent.addChildDistrict(district);\n\n    return district;\n  }\n}\n","/// <reference path=\"../../typings/index.d.ts\" />\r\n\r\nimport { Preprocessor } from './preprocessor';\r\nimport { ExtendedMesh } from './interfaces';\r\nimport { Building, District } from './blocks';\r\nimport { stats } from \"./stats\";\r\n\r\nexport class SceneManager {\r\n  static objects: ExtendedMesh[] = [];\r\n  static scene: THREE.Scene = new THREE.Scene();\r\n  static preprocessor: Preprocessor;\r\n\r\n  static raycaster = new THREE.Raycaster();\r\n  static renderer: THREE.WebGLRenderer;\r\n  static camera: THREE.PerspectiveCamera;\r\n  static controls: THREE.OrbitControls;\r\n\r\n  static intersectedBlock: ExtendedMesh;\r\n\r\n  static cleanUp() {\r\n    for (let obj of this.objects) {\r\n      SceneManager.scene.remove(obj);\r\n      SceneManager.scene.remove(obj.edges);\r\n\r\n      obj.edges.geometry.dispose();\r\n      obj.edges.material.dispose();\r\n\r\n      obj.geometry.dispose();\r\n      obj.material.dispose();\r\n    }\r\n\r\n    SceneManager.objects = [];\r\n  }\r\n\r\n  static initialize() {\r\n    SceneManager.init();\r\n    SceneManager.animate();\r\n  }\r\n\r\n  static init() {\r\n    // create the scene and set the scene size\r\n    let width = window.innerWidth;\r\n    let height = window.innerHeight;\r\n\r\n    // create a renderer and add it to the DOM\r\n    SceneManager.renderer = new THREE.WebGLRenderer({ antialias: true, canvas: <HTMLCanvasElement>document.getElementById('canvas') });\r\n    SceneManager.renderer.setClearColor(0xcccccc, 1);\r\n    SceneManager.renderer.setSize(width, height);\r\n    SceneManager.renderer.domElement.addEventListener('mousemove', SceneManager.onDocumentMouseMove, false);\r\n    document.body.appendChild(SceneManager.renderer.domElement);\r\n\r\n    // create a camera, zoom it out from the model a bit, and add it to the scene.\r\n    SceneManager.camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 10000);\r\n    SceneManager.camera.position.set(70, 70, 150);\r\n    SceneManager.scene.add(SceneManager.camera);\r\n\r\n    // add light\r\n    SceneManager.scene.add(new THREE.AmbientLight(0xcccccc));\r\n\r\n    // create an event listener that resizes the renderer with the browser window.\r\n    window.addEventListener('resize', () => {\r\n      let width = window.innerWidth;\r\n      let height = window.innerHeight;\r\n\r\n      SceneManager.renderer.setSize(width, height);\r\n      SceneManager.camera.aspect = width / height;\r\n      SceneManager.camera.updateProjectionMatrix();\r\n    });\r\n\r\n    // Add OrbitControls so that we can pan around with the mouse.\r\n    SceneManager.controls = new THREE.OrbitControls(SceneManager.camera, SceneManager.renderer.domElement);\r\n  }\r\n\r\n  // Renders the scene and updates the render as needed.\r\n  static animate() {\r\n    requestAnimationFrame(SceneManager.animate);\r\n\r\n    SceneManager.renderer.render(SceneManager.scene, SceneManager.camera);\r\n    SceneManager.controls.update();\r\n    stats.update();\r\n  }\r\n\r\n  static determineVisibility(mesh: ExtendedMesh, building: Building, val: string) {\r\n    switch (val) {\r\n      case 'all':\r\n        mesh.visible = mesh.edges.visible = true;\r\n        break;\r\n      case 'abstract':\r\n        mesh.visible = mesh.edges.visible = building.data.abstract;\r\n        break;\r\n      case 'final':\r\n        mesh.visible = mesh.edges.visible = building.data.final;\r\n        break;\r\n      case 'interface':\r\n        mesh.visible = mesh.edges.visible = building.data.type === 'interface';\r\n        break;\r\n      case 'trait':\r\n        mesh.visible = mesh.edges.visible = building.data.trait;\r\n        break;\r\n    }\r\n  }\r\n\r\n  static onDocumentMouseMove(event: MouseEvent) {\r\n    event.preventDefault();\r\n\r\n    let intersectColor = 0x00D66B;\r\n    let coords = {\r\n      x: (event.clientX / window.innerWidth) * 2 - 1,\r\n      y: - (event.clientY / window.innerHeight) * 2 + 1\r\n    };\r\n\r\n    SceneManager.raycaster.setFromCamera(coords, SceneManager.camera);\r\n\r\n    let intersections: THREE.Intersection[] = SceneManager.raycaster.intersectObjects(SceneManager.objects);\r\n    let tracker = $('#tracker');\r\n\r\n    if (intersections.length > 0) {\r\n      if (SceneManager.intersectedBlock != intersections[0].object) {\r\n        if (SceneManager.intersectedBlock) SceneManager.intersectedBlock.material.color.setHex(SceneManager.intersectedBlock.material.defaultColor);\r\n\r\n        SceneManager.intersectedBlock = <ExtendedMesh>intersections[0].object;\r\n        SceneManager.intersectedBlock.material.color.setHex(intersectColor);\r\n\r\n        tracker.html(SceneManager.intersectedBlock.block.getTrackerText());\r\n      }\r\n\r\n      tracker.css({ top: `${event.clientY + 10}px`, left: `${event.clientX + 10}px`, display: 'block' });\r\n\r\n      document.body.style.cursor = 'pointer';\r\n    } else if (SceneManager.intersectedBlock) {\r\n      SceneManager.intersectedBlock.material.color.setHex(SceneManager.intersectedBlock.material.defaultColor);\r\n      SceneManager.intersectedBlock = null;\r\n\r\n      tracker.css('display', 'none');\r\n\r\n      document.body.style.cursor = 'auto';\r\n    }\r\n  }\r\n}","/// <reference path=\"../../typings/index.d.ts\" />\n\nexport var stats = new Stats();\nstats.showPanel(0); // 0: fps, 1: ms, 2: mb\n\nstats.dom.style.position = 'absolute';\nstats.dom.style.top = 'auto';\nstats.dom.style.left = 'auto';\nstats.dom.style.right = '2px';\nstats.dom.style.bottom = '26px';\n\ndocument.body.appendChild(stats.dom);\n"],"sourceRoot":"/source/"}